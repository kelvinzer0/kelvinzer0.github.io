<?php
error_reporting(0);
$url = $_GET['url'];
$method = $_SERVER['REQUEST_METHOD'];
$userAgent = $_SERVER['HTTP_USER_AGENT'];
$proxyHost = '192.168.43.229';
$proxyPort = 1081;
// Get all headers from the current request
$headers = getallheaders();
if (isset($headers['Host'])) {
    unset($headers['Host']);
}
// Initialize cURL session
$ch = curl_init($url);

// Set cURL options
curl_setopt($ch, CURLOPT_PROXY, $proxyHost . ':' . $proxyPort);
curl_setopt($ch, CURLOPT_PROXYTYPE, CURLPROXY_SOCKS5);
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
curl_setopt($ch, CURLOPT_HEADER, true);
curl_setopt($ch, CURLOPT_CUSTOMREQUEST, $method);
curl_setopt($ch, CURLOPT_USERAGENT, $userAgent);
// Check if the request method is POST, PUT, or PATCH
if ($_SERVER['REQUEST_METHOD'] === 'POST' || $_SERVER['REQUEST_METHOD'] === 'PUT' || $_SERVER['REQUEST_METHOD'] === 'PATCH') {

    // Get the raw request body
    $rawRequestBody = file_get_contents("php://input");
     curl_setopt($ch, CURLOPT_POSTFIELDS, $rawRequestBody);
}

// Set headers from getallheaders()
curl_setopt($ch, CURLOPT_HTTPHEADER, array_map(
    function($key, $value) {
        return "$key: $value";
    },
    array_keys($headers),
    $headers
));

// Execute cURL session and get the result
$result = curl_exec($ch);

// Check for cURL errors
if (curl_errno($ch)) {
    echo 'Curl error: ' . curl_error($ch);
}

// Close cURL session
curl_close($ch);

$resall = explode("\r\n\r\n", $result);
$reshead = explode("\r\n", $resall[0]);
$i = 0;
foreach ($reshead as $key => $value) {
    if ($i==0) {
    //    header($value . " Found");
    } else{
        $newHead = str_replace("https://", "/php-proxy.php?url=https://", $value);
        $newHead = str_replace("http://", "/php-proxy.php?url=http://", $newHead);
        header($newHead);
    }
    
    $i++;
}
var_dump($reshead);


echo $resall[1];
?>
